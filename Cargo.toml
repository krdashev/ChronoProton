[package]
name = "chronophoton"
version = "0.1.0"
edition = "2021"
authors = ["ChronoPhoton Contributors"]
description = "GPU-accelerated simulator for photonic time crystals and Floquet quantum systems"
license = "MIT OR Apache-2.0"
repository = "https://github.com/krdashev/chronophoton"
keywords = ["quantum", "photonics", "gpu", "floquet", "simulation"]
categories = ["science", "simulation"]

[dependencies]
# Numerical computing
ndarray = { version = "0.16.1", features = ["rayon", "serde"] }
num-complex = "0.4"
# Note: ndarray-linalg with OpenBLAS doesn't build easily on Windows
# For now, we'll use pure ndarray operations. To enable BLAS on Windows:
# - Install Intel MKL or use ndarray-linalg with "intel-mkl" feature
# - Or use vcpkg to install OpenBLAS and use "openblas-system" feature
# ndarray-linalg = { version = "0.17", features = ["intel-mkl-static"] }

# GPU acceleration
wgpu = "27.0.1"
bytemuck = { version = "1.14", features = ["derive"] }

# Parallel computing
rayon = "1.8"
tokio = { version = "1.35", features = ["full"] }

# CLI
clap = { version = "4.4", features = ["derive", "color"] }

# GUI
egui = "0.33"
eframe = { version = "0.33", default-features = false, features = ["glow", "default_fonts", "x11", "wayland"] }
egui_plot = "0.34"

# Serialization
serde = { version = "1.0", features = ["derive"] }
toml = "0.9.8"
serde_yaml = "0.9.34"
# HDF5 requires system installation on Windows. Optional for now.
# To enable: install HDF5 from https://www.hdfgroup.org/downloads/hdf5/
# hdf5 = { version = "0.8", optional = true }

# Logging and error handling
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
anyhow = "1.0"
thiserror = "2.0.17"

# Random number generation
rand = "0.9.2"
rand_distr = "0.5.1"

# Math utilities
approx = "0.5"

# Binary serialization
bincode = "2.0.1"

[dev-dependencies]
criterion = { version = "0.7", features = ["html_reports"] }
proptest = "1.4"

[[bin]]
name = "chronophoton"
path = "src/main.rs"

[[bench]]
name = "integration_benchmarks"
harness = false

[[bench]]
name = "gpu_benchmarks"
harness = false

[profile.release]
opt-level = 3
lto = "thin"
codegen-units = 1

[profile.bench]
inherits = "release"
